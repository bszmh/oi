/*题目描述

一个学校里老师要将班上 NN 个同学排成一列，同学被编号为 $1～N$ ，他采取如下的方法：

先将 11 号同学安排进队列，这时队列中只有他一个人；

2-N2?N 号同学依次入列，编号为i的同学入列方式为：老师指定编号为i的同学站在编号为 1-(i -1)1?(i?1) 中某位同学（即之前已经入列的同学）的左边或右边；

3.从队列中去掉 M(M<N)M(M<N) 个同学，其他同学位置顺序不变。

在所有同学按照上述方法队列排列完毕后，老师想知道从左到右所有同学的编号。

输入输出格式

输入格式：
第 11 行为一个正整数 NN ，表示了有 NN 个同学。

第 2-N2?N 行，第 ii 行包含两个整数 k,pk,p ，其中 kk 为小于 ii 的正整数， pp 为 00 或者 11 。若 pp 为 00 ，则表示将 ii 号同学插入到 kk 号同学的左边， pp 为 11 则表示插入到右边。

第 N+1N+1 行为一个正整数 MM ，表示去掉的同学数目。

接下来 MM 行，每行一个正整数 xx ，表示将 xx 号同学从队列中移去，如果 xx 号同学已经不在队列中则忽略这一条指令。

输出格式：
11 行，包含最多 NN 个空格隔开的正整数，表示了队列从左到右所有同学的编号，行末换行且无空格。

输入输出样例

输入样例#1： 复制
4
1 0
2 1
1 0
2
3
3
输出样例#1： 复制
2 4 1

说明

样例解释：

将同学 22 插入至同学 11 左边，此时队列为：

2 121

将同学 33 插入至同学 22 右边，此时队列为：

2 3 1231

将同学 44 插入至同学 11 左边，此时队列为：

2 3 4 12341

将同学 33 从队列中移出，此时队列为：

2 4 1241

同学 33 已经不在队列中，忽略最后一条指令

最终队列：

2 4 1241

数据范围

对于 20\%20% 的数据，有 N≤10N≤10 ；

对于 40\%40% 的数据，有 N≤1000N≤1000 ；

对于 100\%100% 的数据，有 N, M≤100000N,M≤100000 */




#include<iostream>
#include<list>
using namespace std;
int main()
{
	list<int>d;
	int n,m;
	d.push_back(1);
	cin>>n;	
	for(int i=1,i<=n;i++)
	{
		int p,k;
		cin>>k>>p;
		find
		if(p)
		{
			d.insert(i,k+2) 
		}
		else
		{
			d.insert(i,k+1) 
		}
	}
	cin>>m;
	for(int i=1;i<=m;i++)
	{
		
	}
	
			
	
	
	
}



